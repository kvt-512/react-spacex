{"version":3,"sources":["components/Form/FormView.js","util.js","components/Form/FormContainer.js","action-creator.js","components/Form/index.js","components/Table/TableView.js","components/Table/TableContainer.js","components/Table/index.js","components/Details/DetailsView.js","components/Details/index.js","components/Login/LoginView.js","components/Login/LoginContainer.js","components/Login/index.js","components/Logout/LogoutView.js","components/Logout/LogoutContainer.js","components/Logout/index.js","components/App.js","components/Login/config.js","index.js"],"names":["FormView","props","className","onClick","allLaunches","pastLaunches","upComingLaunches","type","value","startDate","onChange","onStartDate","endDate","onEndDate","findLaunch","getFormatedDate","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","FormContainer","e","setState","target","console","log","state","fetch","then","response","json","data","showAllLaunches","showPastLaunches","showUpComingLaunches","datedLaunch","this","React","PureComponent","showLaunch","searchLaunch","connect","actives","includes","dispatch","launches","launch","launchDates","TableView","map","index","flight","flight_number","showDetails","mission_name","launch_date_utc","rocket","rocket_name","rocket_type","second_stage","payloads","payload_type","payload_mass_kg","launch_site","site_name","upcoming","launch_success","TableContainer","number","parentNode","getAttribute","key","DetailsView","details","launch_year","LoginView","message","userValue","onInputEmail","placeholder","passwordValue","onInputPassword","onRegister","onLogin","onCancel","LoginContainer","user","password","undefined","firebase","auth","signInWithEmailAndPassword","userCredential","logMeIn","email","catch","error","errorCode","code","errorMessage","createUserWithEmailAndPassword","registerMe","login","register","LogoutView","onLogout","LogoutContainer","signOut","logMeOut","logout","App","Login","Logout","Form","Table","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","action","regiter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85648c0e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FormView = props => {\r\n    return (\r\n        <div className={props.className}>\r\n            <div>\r\n                <button onClick={props.allLaunches}>All launches</button>\r\n                <button onClick={props.pastLaunches}>Previous launches</button>\r\n                <button onClick={props.upComingLaunches}>Upcoming launches</button>\r\n            </div>\r\n            <div>\r\n                <input type=\"date\" value={props.startDate} onChange={props.onStartDate}></input>\r\n                <input type=\"date\" value={props.endDate} onChange={props.onEndDate}></input>\r\n                <button type=\"date\" onClick={props.findLaunch}>Go</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormView;","export const getFormatedDate = () => {\r\n    const currentDate = new Date();\r\n    let year = currentDate.getFullYear();\r\n    let month = currentDate.getMonth() + 1;\r\n    let day = currentDate.getDate();\r\n    month = month<10 ? `0${month}`: month;\r\n    day = day<10 ? `0${day}` : day;\r\n\r\n    const date = `${year}-${month}-${day}`;\r\n    return date;\r\n}","import React from 'react';\r\nimport FormView from './FormView';\r\nimport { getFormatedDate } from '../../util';\r\n\r\nclass FormContainer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            startDate: getFormatedDate(),\r\n            endDate:  getFormatedDate()\r\n        }\r\n\r\n        this.allLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    props.showAllLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.pastLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches/past')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showPastLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.upComingLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches/upcoming')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showUpComingLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.findLaunch = e => {\r\n            fetch(`https://api.spacexdata.com/v3/launches?start=${this.state.startDate}&end=${this.state.endDate}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.datedLaunch(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    onStartDate = e => {\r\n        this.setState({\r\n            startDate: e.target.value\r\n        })\r\n        // console.log(this.state.startDate);\r\n    }\r\n\r\n    onEndDate = e => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            endDate: e.target.value\r\n        })\r\n        // console.log(this.state.endDate);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <FormView\r\n                startDate={this.state.startDate}\r\n                endDate={this.state.endDate}\r\n                allLaunches={this.allLaunches}\r\n                pastLaunches={this.pastLaunches}\r\n                upComingLaunches={this.upComingLaunches}\r\n                findLaunch={this.findLaunch}\r\n                onStartDate={this.onStartDate}\r\n                onEndDate={this.onEndDate}\r\n                className={this.props.className}\r\n            ></FormView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormContainer;","export const showAllLaunches = (launches) => {\r\n    return {\r\n        type: \"all\",\r\n        allLaunches: launches\r\n    }\r\n}\r\n\r\nexport const showPastLaunches = data => {\r\n    return {\r\n        type: \"past\",\r\n        pastLaunches: data\r\n    }\r\n}\r\n\r\nexport const showUpComingLaunches = data => {\r\n    return {\r\n        type: \"upcoming\",\r\n        upComingLaunches: data\r\n    }\r\n}\r\n\r\nexport const showLaunch = data => {\r\n    return  {\r\n        type: \"search\",\r\n        searchLaunch: data\r\n    }\r\n}\r\n\r\nexport const datedLaunch = data => {\r\n    return {\r\n        type: \"date\",\r\n        launch: data\r\n    }\r\n}\r\n\r\nexport const logMeIn = data => {\r\n    return {\r\n        type: \"login\",\r\n        login: data\r\n    }\r\n}\r\n\r\nexport const logMeOut = data => {\r\n    return {\r\n        type: \"logout\",\r\n        logout: data\r\n    }\r\n}\r\n\r\nexport const registerMe = data => {\r\n    return {\r\n        type: \"register\",\r\n        register: data\r\n    }\r\n}","import FormContainer from './FormContainer';\r\nimport { showAllLaunches, showPastLaunches, showUpComingLaunches, showLaunch , datedLaunch} from '../../action-creator';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        className: state.actives.includes(\"form\")? \"show\" : \"hide\"\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showAllLaunches: launches => dispatch(showAllLaunches(launches)),\r\n        showPastLaunches: pastLaunches => dispatch(showPastLaunches(pastLaunches)),\r\n        showUpComingLaunches: upComingLaunches => dispatch(showUpComingLaunches(upComingLaunches)),\r\n        showLaunch: launch => dispatch(showLaunch(launch)),\r\n        datedLaunch: launchDates => dispatch(datedLaunch(launchDates))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);","import React from 'react';\r\n\r\nconst TableView = props => {\r\n    return (\r\n        <div className={props.className}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Launch Number</td>\r\n                        <td>Mission Name</td>\r\n                        <td>Launch Date</td>\r\n                        <td>Rocket Name</td>\r\n                        <td>Rocket Type</td>\r\n                        <td>Payload Type</td>\r\n                        <td>Payload Mass</td>\r\n                        <td>Launch Site</td>\r\n                        <td>Launch Status</td>\r\n                        <td>Launch Result</td>\r\n                    </tr>\r\n                    {\r\n                        props.launches.map((launch, index) =>\r\n                            <tr key={index} flight={launch.flight_number} onClick={props.showDetails}>\r\n                                <td>{launch.flight_number}</td>\r\n                                <td>{launch.mission_name}</td>\r\n                                <td>{launch.launch_date_utc}</td>\r\n                                <td>{launch.rocket.rocket_name}</td>\r\n                                <td>{launch.rocket.rocket_type}</td>\r\n                                <td>{launch.rocket.second_stage.payloads[0].payload_type}</td>\r\n                                <td>{launch.rocket.second_stage.payloads[0].payload_mass_kg}</td>\r\n                                <td>{launch.launch_site.site_name}</td>\r\n                                <td>{launch.upcoming ? \"ture\" : \"false\"}</td>\r\n                                <td>{launch.launch_success ? \"ture\" : \"false\"}</td>\r\n                            </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableView;","import React from 'react';\r\nimport TableView from './TableView';\r\n\r\nclass TableContainer extends React.PureComponent{    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            index: null\r\n        }\r\n\r\n        this.showDetails = e => {\r\n            let number = e.target.parentNode.getAttribute(\"flight\");\r\n            fetch(`https://api.spacexdata.com/v3/launches/${number}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showLaunch(data);\r\n                });\r\n\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n         <TableView\r\n            showDetails={this.showDetails}\r\n            key={this.key}\r\n            index={this.index}\r\n            flight_number={this.flight}\r\n            launches={this.props.launches}\r\n            className={this.props.className}\r\n         ></TableView>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default TableContainer;","import TableContainer from './TableContainer';\r\nimport { connect } from 'react-redux';\r\nimport { showLaunch } from '../../action-creator';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        launches: state.launches,\r\n        className: state.actives.includes(\"table\")? \"show\" : \"hide\"\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showLaunch: launch => dispatch(showLaunch(launch))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContainer);","import React from 'react';\r\nimport './Details.css';\r\n\r\nconst DetailsView = props => {\r\n    return (\r\n        <div className={props.className}>\r\n            <div>{props.details.mission_name}</div>\r\n            <div>{props.details.flight_number}</div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Launch Name </td>\r\n                        <td>{props.details.launch_year}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Launch Result </td>\r\n                        <td>{props.details.launch_success ? \"success\" : \"fail\"}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            {/* <div>Launch Number: {props.details.flight_number}</div>\r\n            <div>Mission Name: {props.details.mission_name}</div>\r\n            <div>Launch Name: {props.details.launch_year}</div>\r\n            <div>Launch Result: {props.details.launch_success ? \"success\" : \"fail\"}</div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DetailsView;","import DetailsView from './DetailsView';\r\nimport { connect } from 'react-redux';\r\n// import { showLaunch } from '../../action-creator';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        details: state.flight,\r\n        className: state.actives.includes(\"details\")? \"show\" : \"hide\"\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DetailsView);","import React from 'react';\r\n\r\nconst LoginView = props => {\r\n    return (\r\n        <div className={props.className}>\r\n            <div>{props.message}</div>\r\n            <div>\r\n                <input value={props.userValue} onChange={props.onInputEmail} placeholder=\"Email\"></input>\r\n            </div>\r\n            <div>\r\n                <input value={props.passwordValue} type=\"password\" onChange={props.onInputPassword} placeholder=\"Password\"></input>\r\n            </div> \r\n            <button onClick={props.onRegister}>Register</button>\r\n            <button onClick={props.onLogin}>Login</button>\r\n            <button onClick={props.onCancel}>Cancle</button>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default LoginView;","import React from 'react';\r\nimport LoginView from './LoginView';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\nclass LoginContainer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: \"\",\r\n            password: \"\",\r\n            message: \"\"\r\n        }\r\n\r\n\r\n        this.onInputEmail = e => {\r\n            this.setState({\r\n                user: e.target.value\r\n            })\r\n        }\r\n\r\n        this.onInputPassword = e => {\r\n            this.setState({\r\n                password: e.target.value\r\n            })\r\n        }\r\n\r\n        this.onLogin = e => {\r\n            if (this.state.user === null || this.state.user === undefined || this.state.user === \"\")\r\n                this.setState({\r\n                    message: \"Invalied mail id\"\r\n                })\r\n            else if (this.state.password === null || this.state.password === undefined || this.state.password === \"\")\r\n                this.setState({\r\n                    message: \"Invalid password\"\r\n                })\r\n            else{\r\n                // firebase.initializeApp(firebaseConfig);\r\n                firebase.auth().signInWithEmailAndPassword(this.state.user, this.state.password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    var user = userCredential.user;\r\n                    props.logMeIn(user.email)\r\n                    console.log(user.email);\r\n                    this.setState({\r\n                        message: \"\"\r\n                    })\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    let errorCode = error.code;\r\n                    let errorMessage = error.message;\r\n                    console.log(errorCode, errorMessage);\r\n                    this.setState({\r\n                        message: errorMessage\r\n                    })\r\n                    // ..\r\n                });\r\n            }\r\n            // else\r\n            //     props.logMeIn(this.state.user);\r\n            //     console.log(`${this.state.user} logged in`);\r\n        }\r\n\r\n        this.onRegister = e => {\r\n            console.log(\"reg\")\r\n            if (this.state.user === null || this.state.user === undefined || this.state.user === \"\")\r\n                this.setState({\r\n                    message: \"Invalied mail id\"\r\n                })\r\n            else if (this.state.password === null || this.state.password === undefined || this.state.password === \"\")\r\n                this.setState({\r\n                    message: \"Invalid password\"\r\n                })\r\n            else{\r\n                // firebase.initializeApp(firebaseConfig);\r\n                firebase.auth().createUserWithEmailAndPassword(this.state.user, this.state.password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    var user = userCredential.user;\r\n                    props.registerMe(user.email)\r\n                    console.log(user.email);\r\n                    this.setState({\r\n                        message: \"Registered\"\r\n                    })\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    let errorCode = error.code;\r\n                    let errorMessage = error.message;\r\n                    console.log(errorCode, errorMessage);\r\n                    this.setState({\r\n                        message: errorMessage\r\n                    })\r\n                });\r\n            }\r\n            // this.setState({\r\n            //     message: \"Registered\"\r\n            // })\r\n            // props.registerMe(this.state.user);\r\n        }\r\n\r\n        this.onCancel = e => {\r\n            console.log(\"Canceld\")\r\n            this.setState({\r\n                user: \"\",\r\n                password: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LoginView\r\n                onInputEmail={this.onInputEmail}\r\n                onInputPassword={this.onInputPassword}\r\n                onLogin={this.onLogin}\r\n                onRegister={this.onRegister}\r\n                onCancel={this.onCancel}\r\n                userValue={this.state.user}\r\n                passwordValue={this.state.password}\r\n                message={this.state.message}\r\n                className={this.props.className}\r\n            ></LoginView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginContainer;","import LoginContainer from './LoginContainer';\r\nimport { logMeIn, registerMe } from '../../action-creator';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        className: state.actives.includes(\"login\")? \"show\" : \"hide\"\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logMeIn: user => dispatch(logMeIn(user)),\r\n        registerMe: user => dispatch(registerMe(user))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (LoginContainer);","import React from 'react';\r\n\r\nconst LogoutView = props => {\r\n    return (\r\n        <div className={props.className}>\r\n            <p>You are logged in as {props.user}</p>\r\n            <button onClick={props.onLogout}>Logout</button>\r\n            <hr></hr>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogoutView;","import React from 'react';\r\nimport LogoutView from './LogoutView';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nclass LogoutContainer extends React.PureComponent {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.onLogout = e => {\r\n            firebase.auth().signOut().then(() => {\r\n                // Sign-out successful.\r\n                props.logMeOut(props.user);\r\n              }).catch((error) => {\r\n                // An error happened.\r\n                console.log(error);\r\n              });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <LogoutView\r\n                onLogout={this.onLogout}\r\n                user={this.props.user}\r\n                className={this.props.className}\r\n            ></LogoutView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogoutContainer;","import LogoutContainer from './LogoutContainer';\r\nimport { logMeOut } from '../../action-creator';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        className: state.actives.includes(\"logout\")? \"show\" : \"hide\"\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logMeOut: user => dispatch(logMeOut(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (LogoutContainer);","import Form from './Form';\nimport Table from './Table';\nimport Details from './Details';\nimport Login from './Login';\nimport Logout from './Logout';\n\nfunction App() {\n  return (\n    <div>\n      <h1>SpaceX Dashboard</h1>\n      <Login></Login>\n      <Logout></Logout>\n      <Form></Form>\n      <Table></Table>\n      <Details></Details>\n    </div>\n  );\n}\n\nexport default App;\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD_hJbJgmQ_6tyUky66VDJzvQH3ggk5Ktg\",\r\n    authDomain: \"personal-89504.firebaseapp.com\",\r\n    projectId: \"personal-89504\",\r\n    storageBucket: \"personal-89504.appspot.com\",\r\n    messagingSenderId: \"481399710794\",\r\n    appId: \"1:481399710794:web:4807198906bdc839b0f2b3\",\r\n    measurementId: \"G-XV3G2NGJ6R\"\r\n};\r\n\r\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport firebaseConfig from './components/Login/config';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n\nfirebase.initializeApp(firebaseConfig);\n\nconst launches = (state = {\n  launches: [],\n  flight: {},\n  user: \"\",\n  actives: [\"login\"]\n}, action) => {\n  switch (action.type) {\n    case \"all\":\n      return {...state, \n        launches: action.allLaunches, \n        actives: [\"logout\", \"form\", \"table\"]\n      }\n    case \"past\":\n      return {...state,\n        launches: action.pastLaunches,\n        actives: [\"logout\", \"form\", \"table\"]\n      }\n    case \"upcoming\":\n      return {...state,\n        launches: action.upComingLaunches,\n        actives: [\"logout\", \"form\", \"table\"]\n      }\n    case \"search\":\n      return { ...state, flight: action.searchLaunch,\n        actives: [\"logout\", \"form\", \"details\"]\n      }\n    case \"date\":\n      return {...state,\n        launches: action.launch,\n        actives: [\"logout\", \"form\", \"table\"]\n      }\n    case \"login\":\n      return {...state,\n        user: action.login,\n        actives: [\"logout\", \"form\"]\n      }\n    case \"logout\":\n      return {...state,\n        user: \"\",\n        actives: [\"login\"]\n      }\n    case \"register\":\n      return {...state,\n        user: action.regiter,\n        actives: [\"login\"]\n      }\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(launches)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}