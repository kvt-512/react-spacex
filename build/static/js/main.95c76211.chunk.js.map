{"version":3,"sources":["components/Form/FormView.js","util.js","components/Form/FormContainer.js","action-creator.js","components/Form/index.js","components/Table/TableView.js","components/Table/TableContainer.js","components/Table/index.js","components/Details/DetailsView.js","components/Details/index.js","components/App.js","index.js"],"names":["FormView","props","onClick","allLaunches","pastLaunches","upComingLaunches","type","value","startDate","onChange","onStartDate","endDate","onEndDate","findLaunch","getFormatedDate","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","FormContainer","e","setState","target","console","log","state","fetch","then","response","json","data","showAllLaunches","showPastLaunches","showUpComingLaunches","datedLaunch","this","React","PureComponent","showLaunch","searchLaunch","connect","dispatch","launches","launch","launchDates","map","index","flight","flight_number","showDetails","mission_name","launch_date_utc","rocket","rocket_name","rocket_type","second_stage","payloads","payload_type","payload_mass_kg","launch_site","site_name","upcoming","launch_success","TableContainer","number","parentNode","getAttribute","key","details","launch_year","DetailsView","App","Form","Table","Details","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95c76211.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FormView = props => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={props.allLaunches}>All launches</button>\r\n                <button onClick={props.pastLaunches}>Previous launches</button>\r\n                <button onClick={props.upComingLaunches}>Upcoming launches</button>\r\n            </div>\r\n            <div>\r\n                <input type=\"date\" value={props.startDate} onChange={props.onStartDate}></input>\r\n                <input type=\"date\" value={props.endDate} onChange={props.onEndDate}></input>\r\n                <button type=\"date\" onClick={props.findLaunch}>Go</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormView;","export const getFormatedDate = () => {\r\n    const currentDate = new Date();\r\n    let year = currentDate.getFullYear();\r\n    let month = currentDate.getMonth() + 1;\r\n    let day = currentDate.getDate();\r\n    month = month<10 ? `0${month}`: month;\r\n    day = day<10 ? `0${day}` : day;\r\n\r\n    const date = `${year}-${month}-${day}`;\r\n    return date;\r\n}","import React from 'react';\r\nimport FormView from './FormView';\r\nimport { getFormatedDate } from '../../util';\r\n\r\nclass FormContainer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            startDate: getFormatedDate(),\r\n            endDate:  getFormatedDate()\r\n        }\r\n\r\n        this.allLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    props.showAllLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.pastLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches/past')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showPastLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.upComingLaunches = () => {\r\n            fetch('https://api.spacexdata.com/v3/launches/upcoming')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showUpComingLaunches(data);\r\n                });\r\n        }\r\n\r\n        this.findLaunch = e => {\r\n            fetch(`https://api.spacexdata.com/v3/launches?start=${this.state.startDate}&end=${this.state.endDate}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.datedLaunch(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    onStartDate = e => {\r\n        this.setState({\r\n            startDate: e.target.value\r\n        })\r\n        // console.log(this.state.startDate);\r\n    }\r\n\r\n    onEndDate = e => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            endDate: e.target.value\r\n        })\r\n        // console.log(this.state.endDate);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <FormView\r\n                startDate={this.state.startDate}\r\n                endDate={this.state.endDate}\r\n                allLaunches={this.allLaunches}\r\n                pastLaunches={this.pastLaunches}\r\n                upComingLaunches={this.upComingLaunches}\r\n                findLaunch={this.findLaunch}\r\n                onStartDate={this.onStartDate}\r\n                onEndDate={this.onEndDate}\r\n            ></FormView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormContainer;","export const showAllLaunches = (launches) => {\r\n    return {\r\n        type: \"all\",\r\n        allLaunches: launches\r\n    }\r\n}\r\n\r\nexport const showPastLaunches = data => {\r\n    return {\r\n        type: \"past\",\r\n        pastLaunches: data\r\n    }\r\n}\r\n\r\nexport const showUpComingLaunches = data => {\r\n    return {\r\n        type: \"upcoming\",\r\n        upComingLaunches: data\r\n    }\r\n}\r\n\r\nexport const showLaunch = data => {\r\n    return  {\r\n        type: \"search\",\r\n        searchLaunch: data\r\n    }\r\n}\r\n\r\nexport const datedLaunch = data => {\r\n    return {\r\n        type: \"date\",\r\n        launch: data\r\n    }\r\n}","import FormContainer from './FormContainer';\r\nimport { showAllLaunches, showPastLaunches, showUpComingLaunches, showLaunch , datedLaunch} from '../../action-creator';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showAllLaunches: launches => dispatch(showAllLaunches(launches)),\r\n        showPastLaunches: pastLaunches => dispatch(showPastLaunches(pastLaunches)),\r\n        showUpComingLaunches: upComingLaunches => dispatch(showUpComingLaunches(upComingLaunches)),\r\n        showLaunch: launch => dispatch(showLaunch(launch)),\r\n        datedLaunch: launchDates => dispatch(datedLaunch(launchDates))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TableView = props => {\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Launch Number</td>\r\n                        <td>Mission Name</td>\r\n                        <td>Launch Date</td>\r\n                        <td>Rocket Name</td>\r\n                        <td>Rocket Type</td>\r\n                        <td>Payload Type</td>\r\n                        <td>Payload Mass</td>\r\n                        <td>Launch Site</td>\r\n                        <td>Launch Status</td>\r\n                        <td>Launch Result</td>\r\n                    </tr>\r\n                    {\r\n                        props.launches.map((launch, index) =>\r\n                            <tr key={index} flight={launch.flight_number} onClick={props.showDetails}>\r\n                                <td>{launch.flight_number}</td>\r\n                                <td>{launch.mission_name}</td>\r\n                                <td>{launch.launch_date_utc}</td>\r\n                                <td>{launch.rocket.rocket_name}</td>\r\n                                <td>{launch.rocket.rocket_type}</td>\r\n                                <td>{launch.rocket.second_stage.payloads[0].payload_type}</td>\r\n                                <td>{launch.rocket.second_stage.payloads[0].payload_mass_kg}</td>\r\n                                <td>{launch.launch_site.site_name}</td>\r\n                                <td>{launch.upcoming ? \"ture\" : \"false\"}</td>\r\n                                <td>{launch.launch_success ? \"ture\" : \"false\"}</td>\r\n                            </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        launches: state.launches\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TableView);","import React from 'react';\r\nimport TableView from './TableView';\r\n\r\nclass TableContainer extends React.PureComponent{    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            index: null\r\n        }\r\n\r\n        this.showDetails = e => {\r\n            let number = e.target.parentNode.getAttribute(\"flight\");\r\n            fetch(`https://api.spacexdata.com/v3/launches/${number}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    props.showLaunch(data);\r\n                });\r\n\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n         <TableView\r\n            showDetails={this.showDetails}\r\n            key={this.key}\r\n            index={this.index}\r\n            flight_number={this.flight}\r\n         ></TableView>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default TableContainer;","import TableContainer from './TableContainer';\r\nimport { connect } from 'react-redux';\r\nimport { showLaunch } from '../../action-creator';\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showLaunch: launch => dispatch(showLaunch(launch))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DetailsView = props => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>{props.details.flight_number}</li>\r\n                <li>{props.details.mission_name}</li>\r\n                <li>{props.details.launch_year}</li>\r\n                <li>{props.details.launch_success? \"success\" : \"fail\" }</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        details: state.flight\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(DetailsView);","import DetailsView from './DetailsView';\r\nimport { connect } from 'react-redux';\r\n// import { showLaunch } from '../../action-creator';\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DetailsView);","import Form from './Form';\nimport Table from './Table';\nimport Details from './Details';\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>SpaceX Dashboard</h1>\n      <Form></Form>\n      <Table></Table>\n      <Details></Details>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst launches = (state = {\n  launches: [],\n  flight: {}\n}, action) => {\n  switch (action.type) {\n    case \"all\":\n      return {...state, launches: action.allLaunches}\n    case \"past\":\n      return {...state, launches: action.pastLaunches}\n    case \"upcoming\":\n      return {...state, launches: action.upComingLaunches}\n    case \"search\":\n      return { ...state, flight: action.searchLaunch}\n    case \"date\":\n      return {...state, launches: action.launch}\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(launches)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}